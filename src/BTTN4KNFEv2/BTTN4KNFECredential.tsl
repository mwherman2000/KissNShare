// BlueToqueTools
// Trusted Digial Web Project
// Hyperonomy Digital Identity Lab
// Parallelspace Corporation
// (c) Copyright 2021-2022 Parallelspace Corporation. All Rights Reserved

//include "BTTGenericCredential.tsl";

//////////////////////////////////////////////////////////////////////////////
/// BTT NFE N4K Credential

enum BTTNFEBodyPart
{
	Anywhere,
	Lips,
	UpperLip,
	LowerLip,
	Chin,
	Forehead,
	LeftEarLobe,
	LeftCheek,
	LeftNeck,
	RightEarLobe,
	RightCheek,
	RightNeck,
	HeadOther,
	LeftShoulder,
	LeftChest,
	LeftAbdomen,
	LeftHandBack,
	LeftHandPalm,
	LeftHandFingers,
	RightShoulder,
	RightChest,
	RightAbdomen,
	RightHandBack,
	RightHandPalm,
	RightHandFingers,
	LeftUpperBodyOther,
	RightUpperBodyOther,
	LeftThigh,
	RightThigh,
	LeftGlutimus,
	RightGluimus,
	LeftKnee,
	RightKnee,
	LeftCalf,
	RightCalf,
	LeftFoot,
	RightFoot,
	LeftToes,
	RightToes,
	LeftSole,
	RightSole,
	LeftLowerBodyOther,
	RightUpperBodyOthe
}

struct BTTNFE_N4K_Claims
{
	string timezoneid;
	DateTime tod0approach; // UTC
	DateTime tod1press;
	DateTime tod2sustain;
	DateTime tod3release;
	DateTime tod4recovery;
	DateTime tod5finish;

	int t0ms; // = 0;
	int t1ms;
	int t2ms;
	int t3ms;
	int t4ms;
	int t5ms;

	int d1ms;
	int d2ms;
	int d3ms;
	int d4ms;
	int d5ms;

	int d1s;
	int d2s;
	int d3s;
	int d4s;
	int d5s;

	int t0s; // = 0;
	int t1s;
	int t2s;
	int t3s;
	int t4s;
	int t5s;

	int peak;
	int medianms;
	int medians;
	int coverage;

	bool tongue;

	BTTNFEBodyPart targetbodypart;
	BTTNFEBodyPart actualbodypart;

    int[150] d1approachcurve;
	int[150] d2presscurve;
	int[150] d3sustaincurve;
	int[150] d4releasecurve;
	int[150] d5recoverycurve;

	string d1approachpng64;
	string d2presspng64;
	string d3sustainpng64;
	string d4releasepng64;
	string d5recoverypng64;
}

struct BTTNFE_N4K_EnvelopeContent
{
	string udid;
	List<string>                        context;
	optional string                     credentialsubjectudid;	// bound credential
	optional BTTNFE_N4K_Claims          credentialsubjectclaims;
	optional BTTEncryptedClaims         encryptedclaims;
}

struct BTTNFE_N4K_Envelope
{
	string                              udid;					// same value as content.udid
    BTTGenericCredential_PackingLabel   label;
	BTTNFE_N4K_EnvelopeContent          content;
}

struct BTTNFE_N4K_SealedEnvelope
{
	BTTNFE_N4K_Envelope                 envelope;
	BTTGenericCredential_EnvelopeSeal   proof;
}

cell struct BTTNFE_N4K_SealedEnvelope_Cell
{
	BTTNFE_N4K_SealedEnvelope			sealedenvelope;
}
